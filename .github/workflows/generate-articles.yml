name: Generate Articles

on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/**'

permissions:
  contents: write
  actions: read

jobs:
  generate-articles:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      GEMINI_API_KEY_1: ${{ secrets.GEMINI_API_KEY_1 }}
      GEMINI_API_KEY_2: ${{ secrets.GEMINI_API_KEY_2 }}
      GEMINI_API_KEY_3: ${{ secrets.GEMINI_API_KEY_3 }}
      GEMINI_API_KEY_4: ${{ secrets.GEMINI_API_KEY_4 }}
      GEMINI_API_KEY_5: ${{ secrets.GEMINI_API_KEY_5 }}
      GEMINI_API_KEY_6: ${{ secrets.GEMINI_API_KEY_6 }}
      CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      AMAZON_ACCESS_KEY: ${{ secrets.AMAZON_ACCESS_KEY }}
      AMAZON_SECRET_KEY: ${{ secrets.AMAZON_SECRET_KEY }}
      AMAZON_PARTNER_TAG: ${{ secrets.AMAZON_PARTNER_TAG }}

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUBTOKEN }}
          fetch-depth: 0

      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            google-genai pillow requests markdown pyyaml numpy \
            scikit-learn nltk coverage nose pluggy py randomize \
            simplejson python-dotenv
          pip install --no-deps \
            git+https://${{ secrets.GITHUBTOKEN }}@github.com/amzn/paapi5-python-sdk.git

      - name: üóÇÔ∏è Create required directories
        run: |
          mkdir -p generated-articles
          mkdir -p data

      - name: üß™ Check for required files
        run: |
          touch data/keywords.txt
          touch data/processed_keywords.txt
          touch data/keywords-generated.txt
          touch data/links.txt

      - name: üöÄ Run article generation script
        id: generate
        continue-on-error: true
        run: |
          echo "Running article generator..."
          if [ -f ".github/scripts/generate_articles.py" ]; then
            python .github/scripts/generate_articles.py
          else
            echo "::error:: generate_articles.py not found"
            ls -la .github/scripts/ || echo "No scripts directory"
            exit 1
          fi

      - name: üîé Check for file changes
        id: verify-changed-files
        run: |
          if git diff --quiet && git diff --staged --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            git status
          fi

      - name: ‚úÖ Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add generated-articles/ data/ .last_keyword_index || true
          git commit -m "Auto-generate articles $(date -u '+%Y-%m-%d %H:%M:%S UTC') [skip ci]" || exit 0
          for i in 1 2 3; do
            git push && break || sleep 5
          done

      - name: üìã Create workflow summary
        if: always()
        run: |
          echo "## Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow**: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Articles Generated**: $(ls generated-articles/*.md 2>/dev/null | wc -l)" >> $GITHUB_STEP_SUMMARY

      - name: üï∞Ô∏è Keep repository active
        if: always()
        run: |
          echo "Workflow completed at $(date -u)" > .github/last_run.txt
          git add .github/last_run.txt || true
          git commit -m "Update last run timestamp [skip ci]" || true
          git push || true

      - name: ‚ùå Notify on failure
        if: failure()
        run: |
          echo "::error:: Article generation workflow failed"
          echo "Check logs above for details"
